<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:改mapper.xml映射文件的唯一标识并且必须和数据处理层的接口的路径相同-->
<mapper namespace="works.weave.socks.integral.dao.UsableIntegralDao">
    <!--   必须添加property属性 ，区别于是否加主键-->
    <resultMap id="UsableIntegral" type="works.weave.socks.integral.entities.UsableIntegral">
        <id column="id" property="id" javaType="Long" ></id>
        <result column="record_id" property="recordId" javaType="Long" ></result>
        <result column="value" property="value" javaType="float" ></result>
        <result column="expire_time" property="expireTime" javaType="Date"></result>
        <result column="user_id" property="userId" javaType="String"></result>
        <result column="deleted" property="deleted" javaType="int"></result>
        <result column="create_time" property="createTime" javaType="Date"></result>
        <result column="update_time" property="updateTime" javaType="Date"></result>
    </resultMap>

    <!--id的值必须和数据处理层的接口名一致-->
    <insert id="save" parameterType="works.weave.socks.integral.entities.IntegralRecord">
        insert into usable_integral(record_id,value,expire_time,user_id,deleted,create_time,update_time)
        value (#{recordId},#{value},#{expireTime},#{userId},0,now(),now())
    </insert>

    <select id="intergralSum" resultType="Float">
        select sum(value) from usable_integral
        <where>
            user_id = #{userId}
            AND deleted = 0
        </where>
    </select>

    <select id="usableIntergral" resultMap="UsableIntegral">
        select * from usable_integral
        <where>
            user_id = #{userId}
            AND deleted = 0
        </where>
    </select>

    <select id="findExpire" resultMap="UsableIntegral">
        select * from usable_integral
        <where>
            date(expire_time) = #{expireTime}
            and deleted = 0
        </where>
    </select>

    <update id="updateExpire" parameterType="list">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update usable_integral
            <set>
                deleted = 1
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

</mapper>